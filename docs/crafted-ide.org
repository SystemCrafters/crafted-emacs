* Crafted Emacs IDE Module

** Installation

To use this module, simply require them in your =init.el= at the appropriate
points.

#+begin_src emacs-lisp
;; add crafted-ide package definitions to selected packages list
(require 'crafted-ide-packages)

;; install the packages
(package-install-selected-packages :noconfirm)

;; Load crafted-ide configuration
(require 'crafted-ide-config)
#+end_src

** Description

The ~crafted-ide~ module sets up (and installs if necessary) functionality that
makes Emacs act like a integrated development environment (IDE).

This module includes:

- Project-based buffer management ([[https://github.com/muffinmad/emacs-ibuffer-project][ibuffer-project]])
- LSP client (Eglot)
- Next-generation syntax parsing (Tree-Sitter)
- [[https://editorconfig.org][EditorConfig]] support ([[https://github.com/editorconfig/editorconfig-emacs][editorconfig-emacs]]).

*** Aggressive Indentation

By default Emacs enables [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Indent-Convenience.html][Electric Indent]], a minor mode that
automatically indents code after a RET key is pressed. ~crafted-ide~
adds support for [[https://github.com/Malabarba/aggressive-indent-mode][Aggressive Indent]], which re-indents code as it is
typed. You can enable it for programming modes with the following:

#+begin_src emacs-lisp
  (add-hook 'prog-mode-hook #'aggressive-indent-mode)
#+end_src

*** Eglot

[[https://github.com/joaotavora/eglot][Eglot]] is a client for the Language Server Protocol (LSP) built into
Emacs (>=29). For it to work, you have to have a language server
installed for the language of your choice. Usually, these have to be
installed through your operating system. See [[https://github.com/joaotavora/eglot#connecting-to-a-server][this list]] of servers that
work with Eglot out of the box.

**** Automatically start Eglot when visiting language buffers

It's convenient to add a call to ~eglot-ensure~ for major modes that
have an accompanying language server so that Eglot automatically
initializes when that major mode is activated. ~crafted-ide~ makes a
function available that will automatically add ~eglot-ensure~ to all
major mode hooks for which a language server is installed and
detected. You can enable this behavior with the following:

#+begin_src emacs-lisp
  (require 'crafted-ide-config)
  (crafted-ide-eglot-auto-ensure-all)
#+end_src

*** Tree-Sitter

Tree-Sitter support (built-in since Emacs 29) enables Emacs to better
understand the syntax of your code, thus improving syntax highlighting and
similar functions. Usage of Tree-Sitter is optional.

To compile the language grammars on initial startup,
a C compiler is required.

**** Configuring Tree-Sitter (Emacs 28 or earlier)

Call ~crafted-ide-configure-tree-sitter~ after requiring ~crafted-ide-config~.

#+begin_src emacs-lisp

(require 'crafted-ide-config)
(crafted-ide-configure-tree-sitter)

#+end_src

A new function ~crafted-tree-sitter-load~ will be available to
install language grammars.

#+begin_src emacs-lisp

(crafted-tree-sitter-load 'python)

#+end_src

**** Configuring Tree-Sitter (Emacs 29 or later)

Call ~crafted-ide-configure-tree-sitter~ after requiring ~crafted-ide-config~.
This will install all known language grammars for Tree-Sitter.

Instead, you can pass a list of languages to ~crafted-ide-configure-tree-sitter~,
then it will only install those languages.
This can be also be useful if a certain language grammar doesn't
successfully build on your setup, as you would otherwise be re-prompted to
install new grammars on every Emacs startup.

See the [[https://tree-sitter.github.io/tree-sitter/#parsers][tree-sitter website]] for a list of supported languages.

#+begin_src emacs-lisp

(require 'crafted-ide-config)

;; install all language grammars
(crafted-ide-configure-tree-sitter)

;; install only css, html and python
(crafted-ide-configure-tree-sitter '(css html python))

#+end_src

**** Combobulate

Another use is the package Combobulate, which uses Tree-Sitter to provide
a structured movement within your code. Combobulate is not installed
by this module (it is not yet available on (M)ELPA etc.). But if you have
installed it manually, it is automatically loaded for programming modes. 
 
See [[https://github.com/mickeynp/combobulate][Combobulate]] for details.

If you're interested in a more in-depth look at both Tree-Stitter and
Combobulate, the author of the package has written an extensive blog post
about it: [[https://www.masteringemacs.org/article/combobulate-structured-movement-editing-treesitter][Combobulate: Structured Movement and Editing with Tree-Sitter]].
