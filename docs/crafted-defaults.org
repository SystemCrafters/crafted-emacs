* Crafted Emacs Defaults Module

  To use this module, simply require it in your config.

  #+begin_src emacs-lisp
    (require 'crafted-defaults)
  #+end_src

  - =global-auto-revert-non-file-buffers= : =t=

    Automatically update buffers changed outside Emacs, or by other
    Emacs processes, for example, version control. This affects
    buffers not backed by files.

    Change this setting either by finding it in the Customization UI
    or by adding this code to your =config.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'global-auto-revert-non-file-buffers nil)
    #+end_src

  - =global-auto-revert-mode=

    Global minor mode to revert any buffer when it changes either on
    disk or via another process, for example, version control.

    Turn this off by adding this code to your =config.el=

    #+begin_src emacs-lisp
      (global-auto-revert-mode -1)
    #+end_src

  - =delete-selection-mode=

    Typed text replaces the selection if the selection is active,
    pressing delete or backspace deletes the selection.  To turn this
    off, add this code to your =config.el=

    #+begin_src emacs-lisp
      (delete-selection-mode -1)
    #+end_src

  - =indent-tabs-mode= : =nil=

    Only indent using spaces.

    Change this setting either by finding it in the Customization UI
    or by adding this code to your =config.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'indent-tabs-mode t)
    #+end_src

  - =y-or-n-p=

    Use shorter query responses ('y' or 'n' instead of 'yes' or
    'no'). This is managed by Emacs advice functionality. It can be
    reverted in your =config.el= by adding the code:

    #+begin_src emacs-lisp
      (advice-remove 'yes-or-no-p #'y-or-n-p)
    #+end_src

    In Emacs versions beginning with 28, use the =use-short-answers=
    variable set to =t= instead to accomplish the same thing.

  - =recentf-mode=

    This minor mode saves the files you visit as a recent file so you
    can load that file again quickly. The command =recentf-open-files=
    will display a menu of files you opened recently so you can
    quickly open it again. This mode is added to the =after-init-hook=
    which runs when Emacs is starting but after the initialization
    files have completed running.

  - =recentf-save-file= : =/path/to/crafted-emacs/var/recentf=

    This is the file which will hold the list of recent files. It is
    located in the =var= folder where your Crafted Emacs
    configuration files reside. You can find that path by using the
    =describe-variable= function, which is also bound to the =C-h v=
    keybinding, and then providing the variable name
    =crafted-config-var-directory=.

    Change this setting either by finding it in the Customization UI
    or by adding this code to your =config.el= (make sure to set the
    path correctly)

    #+begin_src emacs-lisp
      (customize-set-variable 'recentf-save-file "/some/path/to/recentf")
    #+end_src

  - =kill-do-not-save-duplicates= : =t=

    The =kill-ring= is where Emacs stores the strings to paste
    later. This variable prohibits Emacs from storing duplicates of
    strings which are already on the =kill-ring=

    Change this setting either by finding it in the Customization UI
    or by adding this code to your =config.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'kill-do-not-save-duplicates nil)
    #+end_src

  - =auto-window-vscroll= : =nil=

    This causes Emacs to not automatically adjust window-vscroll to
    view tall lines.

    Change this by adding this code to your =config.el=

    #+begin_src emacs-lisp
      (setq auto-window-vscroll t)
    #+end_src

  - =fast-but-imprecise-scrolling= : =t=

    Improves scrolling speed by not rendering fontification updates
    unless the text would actually be visible in the buffer. Applies
    when scrolling very fast.

    Change this setting either by finding it in the Customization UI
    or by adding this code to your =config.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'fast-but-imprecise-scrolling nil)
    #+end_src

  - =scroll-conservatively= : =101=

    Never recenter the point when it has scrolled off the screen,
    instead only scroll just enough to bring the point back into
    view.

    Change this value to less than 100 to cause the point to be
    recentered in certain cases instead of scrolling just into
    view. This value can be changed in the Customization UI or by
    adding this code to your =config.el= where =nnn= is some number of
    lines to scroll.

    #+begin_src emacs-lisp
      (customize-set-variable 'scroll-conservatively nnn)
    #+end_src

  - =scroll-margin= : =0=

    The number of lines at the top or bottom of a window where
    scrolling starts.

    Change this value in the Customization UI or by adding this code
    to your =custom.el= where =nn= is some number of lines at the top
    or bottom of a buffer where scrolling should start (for
    example: 5)

    #+begin_src emacs-lisp
      (customize-set-variable 'scroll-margin nn)
    #+end_src

  - =scroll-preserve-screen-position= : =t=

    Controls if scroll commands move point to keep its screen position
    unchanged.

    A value of t means point keeps its screen position if the scroll
    command moved it vertically out of the window, e.g. when scrolling
    by full screens.

    Change this value in the Customization UI or by adding this code
    to =custom.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'scroll-preserve-screen-position nil)
    #+end_src

  - =bidi-paragraph-direction= : =left-to-right=

    Forces directionality of text paragraphs in the buffer. Crafted
    Emacs sets the defualt value as =left-to-right=, which means for
    buffers which don't have their own value, this one will be
    used. You can change this through the Customization UI or by
    addding the following code in =config.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'bidi-paragraph-direction 'right-to-left)
    #+end_src

  - =bidi-inhibit-bpa= : =t=

    This setting will inhibit the Bidirectional Parentheses Algorithm,
    which makes redisplay faster. You can change the value of this
    variable by adding this code to =custom.el=

    #+begin_src emacs-lisp
      (setq bidi-inhibit-bpa nil)
    #+end_src

  - =global-so-long-mode=

    Improves performance for files with excessively long lines. This
    can minor mode can be turned off in =config.el= by adding:

    #+begin_src emacs-lisp
      (global-so-long-mode -1)
    #+end_src

  - =executable-make-buffer-file-executable-if-script-p=

    This makes a shell script executable on save and is called after
    saving the file. To remove this behavior add the following to
    =config.el=

    #+begin_src emacs-lisp
      (remove-hook 'after-save-hook 'executable-make-buffer-file-executable-if-script-p)
    #+end_src

  - =savehist-mode=

    This minor mode saves minibuffer history in the =history= file
    usually found in your Crafted Emacs configuration =var=
    folder. You can change where the file should live with the
    Customization UI or by adding the following to =config.el=

    #+begin_src emacs-lisp
      (customize-set-variable 'savehist-file
                              "/path/to/minibuffer/history/file")
    #+end_src

    You can turn off this mode by adding this code to =config.el=

    #+begin_src emacs-lisp
      (savehist-mode -1)
    #+end_src

  - =crafted-folders= : =t=

    Enables the use of a modern folder structure, as explained below.

    You can turn this off by adding this code to =config.el= (or
    through the Customization UI):

    #+begin_src emacs-lisp
      (customize-set-variable 'crafted-folders nil)
    #+end_src

** Sensible path defaults

Loading this module will make your Emacs, by default, save
several runtime and/or configuration files inside Rational Emacs
=var= directory as explained in [[file:crafted-emacs.org#folder-structure][the documentation]].

This behaviour can be disabled by customizing =crafted-folders=
as explained above.

The list of paths being updated is growing as we aim to have
all state, runtime and/or configuration files stored following
modern practices. What is currently altered is:

- [[help:bookmark-default-file][bookmark-default-file]]
- [[help:nsm-settings-file][nsm-settings-file]]
- [[help:org-id-locations-file][org-id-locations-file]]
- [[help:project-list-file][project-list-file]]
- [[help:savehist-file][savehist-file]]
- [[help:save-place-file][save-place-file]]
- [[help:tramp-persistency-file-name][tramp-persistency-file-name]]
